<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qltmall.mvc.mbg.mapper.CollectMapper">
  <resultMap id="BaseResultMap" type="com.qltmall.mvc.mbg.model.Collect">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_value" jdbcType="INTEGER" property="idValue" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_time" jdbcType="DATE" property="addTime" />
    <result column="is_attention" jdbcType="BIT" property="isAttention" />
    <result column="col_type" jdbcType="BIT" property="colType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_value, user_id, add_time, is_attention, col_type
  </sql>
  <select id="selectByExample" parameterType="com.qltmall.mvc.mbg.model.CollectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qltmall.mvc.mbg.model.CollectExample">
    delete from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qltmall.mvc.mbg.model.Collect">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into collect (id_value, user_id, add_time, 
      is_attention, col_type)
    values (#{idValue,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addTime,jdbcType=DATE}, 
      #{isAttention,jdbcType=BIT}, #{colType,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.qltmall.mvc.mbg.model.Collect">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idValue != null">
        id_value,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="isAttention != null">
        is_attention,
      </if>
      <if test="colType != null">
        col_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idValue != null">
        #{idValue,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=DATE},
      </if>
      <if test="isAttention != null">
        #{isAttention,jdbcType=BIT},
      </if>
      <if test="colType != null">
        #{colType,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qltmall.mvc.mbg.model.CollectExample" resultType="java.lang.Integer">
    select count(*) from collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update collect
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idValue != null">
        id_value = #{record.idValue,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=DATE},
      </if>
      <if test="record.isAttention != null">
        is_attention = #{record.isAttention,jdbcType=BIT},
      </if>
      <if test="record.colType != null">
        col_type = #{record.colType,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update collect
    set id = #{record.id,jdbcType=INTEGER},
      id_value = #{record.idValue,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=DATE},
      is_attention = #{record.isAttention,jdbcType=BIT},
      col_type = #{record.colType,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qltmall.mvc.mbg.model.Collect">
    update collect
    <set>
      <if test="idValue != null">
        id_value = #{idValue,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=DATE},
      </if>
      <if test="isAttention != null">
        is_attention = #{isAttention,jdbcType=BIT},
      </if>
      <if test="colType != null">
        col_type = #{colType,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qltmall.mvc.mbg.model.Collect">
    update collect
    set id_value = #{idValue,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=DATE},
      is_attention = #{isAttention,jdbcType=BIT},
      col_type = #{colType,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>